#!/bin/bash
##############################################################################
# build-repo-dockerfiles
# -----------
# Given an array of repos, build the dockerfiles in that repo and push to a
# private Docker registry.
#
# :authors: Jess Frazelle, @jessfraz
# :date: 15 May 2016
# :version: 0.0.1
##############################################################################
set -e
set -o pipefail

REPO_URL="${REPO_URL:-r.j3ss.co}"
JOBS=${JOBS:-2}
export REPO_URL

build_repo_dockerfile(){
	local orig=$1
	local user=${orig%/*}
	local repo=${orig#*/}
	local suite=latest
	local image=${REPO_URL}/${repo}:${suite}
	local tmpdir
	tmpdir=$(mktemp -d)

	case "${user}/${repo}" in
		"kylemanna/docker-openvpn")
			image=${REPO_URL}/openvpn-server:${suite}
			;;
		"jishi/node-sonos-http-api")
			image=${REPO_URL}/node-sonos:${suite}
			;;
		*) ;;
	esac

	git clone --depth 1 "https://github.com/${user}/${repo}.git" "$tmpdir"
	build_and_push "$tmpdir" "$image" .

	# also push the weather-server & reg-server images
	if [[ "${user}/${repo}" == "jessfraz/weather" ]] || [[ "${user}/${repo}" == "jessfraz/reg" ]]; then
		image=${REPO_URL}/${repo}-server:${suite}
		build_and_push "$tmpdir" "$image" server
	fi

	# cleanup
	rm -rf "$tmpdir"
}
export -f build_repo_dockerfile

build_and_push(){
	local dir=$1
	local image=$2
	local context=$3

	echo
	echo "Building Dockerfile for image -> ${image}"
	echo

	(
	set -x
	cd "$dir"
	docker build --rm --force-rm --no-cache -t "${image}" "${context}"
	)

	echo "                       ---                                   "
	echo "Successfully built ${image}"
	echo "                       ---                                   "

	# try push a few times because notary server sometimes returns 401 for
	# absolutely no reason
	n=0
	until [ $n -ge 5 ]; do
		docker push --disable-content-trust=false "${image}" && break
		echo "Try #$n failed... sleeping for 15 seconds"
		n=$((n+1))
		sleep 15
	done
}
export -f build_and_push

repos=(
jessfraz/apk-file
jessfraz/audit
jessfraz/bane
jessfraz/battery
jessfraz/certok
jessfraz/cliaoke
jessfraz/dockfmt
jessfraz/dstats
jessfraz/ghb0t
jessfraz/magneto
jessfraz/netns
jessfraz/netscan
jessfraz/onion
jessfraz/pastebinit
jessfraz/pepper
jessfraz/pony
jessfraz/reg
jessfraz/riddler
jessfraz/s3server
jessfraz/snippetlib
jessfraz/udict
jessfraz/upmail
jessfraz/weather
kylemanna/docker-openvpn
)

main(){
	echo "Running in parallel with ${JOBS} jobs."
	parallel --tag --verbose --ungroup -j"${JOBS}" build_repo_dockerfile "{1}" ::: "${repos[@]}"
}

main
