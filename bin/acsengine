#!/bin/bash
##############################################################################
# acsengine
# -----------
# Better acs-engine. Adds the following functionality:
# - rm command
# - list command (with master ip)
# - --ssh-key flag on deploy
# - command to move kubeconfig locally
#
# See: https://github.com/Azure/acs-engine/issues/2535
#
# Usage:
# 	acsengine {rm,ls,kubeconfig}
#
# :authors: Jess Frazelle, @jessfraz
# :date: 27 March 2018
# :version: 0.0.1
##############################################################################
set -e
set -o pipefail

OUTPUT_DIR=${OUTPUT_DIR:="${GOPATH}/src/github.com/Azure/acs-engine/_output"}

delete(){
	if [[ -z "$@" ]]; then
		(>&2 echo "must pass a resource group to rm")
		exit 1
	fi

	for rg in "$@"; do
		echo "Deleting resource group $rg..."
		az group delete -n "$rg" || true
	done
}

kubeconfig(){
	if [[ -z "$@" ]]; then
		(>&2 echo "must pass an acs-engine deployment name to kubeconfig")
		exit 1
	fi

	deployment=$1
	kubeconfigs=( $(find "${OUTPUT_DIR}/${deployment}/kubeconfig" -maxdepth 1 -mindepth 1 -type f) )
	kcs=""

	for kc in "${kubeconfigs[@]}"; do
		kcs+=":${kc}"
	done

	export KUBECONFIG="${KUBECONFIG}${kcs}:${HOME}/.kube/config"

	# Create a temp file
	tmpfile=$(mktemp /tmp/acsengine.XXXXXX)

	# Save the merged config view to the temp file
	kubectl config view > "$tmpfile"

	# Copy the merged config to our local kubeconfig
	cp "$tmpfile" "${HOME}/.kube/config"

	# Cleanup the temp file
	rm "$tmpfile"

	echo "Merged kubeconfig for $deployment to local kubeconfig"
	echo "Run \`kubectl config view\` to verify"
}

list(){
	deployments=( $(find "${OUTPUT_DIR}" -maxdepth 1 -mindepth 1 -type d -printf "%f\n") )

	for deployment in "${deployments[@]}"; do
		ip=$(az network public-ip list -g "$deployment" | jq --raw-output ".[0] | .ipAddress")
		echo "$deployment $ip"
	done | column
}

main() {
	args=$@
	cmd=$1

	case $cmd in
		deploy)
			echo "doing deploy"
			;;
		rm)
			delete ${@:2}
			;;
		ls)
			list
			;;
		kubeconfig)
			kubeconfig ${@:2}
			;;
		*)
			acs-engine $@
			;;
	esac
}

main "$@"
