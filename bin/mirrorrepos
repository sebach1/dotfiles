#!/bin/bash
##############################################################################
# mirrorrerpos
# -----------
# Mirror all public repos in a users github and push to another remote
#
# :authors: Jess Frazelle, @jfrazelle
# :date: 6 April 2016
# :version: 0.0.1
##############################################################################
set -e
set -o pipefail

if [[ -z "$GITHUB_USERNAME" ]]; then
	echo "Set the GITHUB_USERNAME env variable."
	exit 1
fi

if [[ -z "$REMOTE_URL" ]]; then
	echo "Set the REMOTE_URL env variable."
	exit 1
fi

URI=https://api.github.com
API_VERSION=v3

DEFAULT_PER_PAGE=100

override_repos=( docker-freeipa mac-dev-setup mbox universe )

mirror_repo(){
	local orig=$1
	local user=${orig%/*}
	local repo=${orig#*/}
	local tmpdir=$(mktemp -d)


	if [[ "$GITHUB_USERNAME" == "$user" ]]; then
		dest="$repo"
	else
		dest="$orig"
	fi

	if [[ " ${override_repos[@]} " =~ " ${repo} " ]]; then
		dest="$repo"
	fi

	echo
	echo "Mirroring ${GITHUB_USERNAME}/${repo} -> ${dest}"
	echo

	(
	set -x
	git clone --mirror "git@github.com:${GITHUB_USERNAME}/${repo}.git" "$tmpdir"
	cd "$tmpdir"
	git push --mirror "${REMOTE_URL}:${dest}.git"
	)

	# cleanup
	rm -rf "$tmpdir"
}


main(){
	# send the request
	local response=$(curl -sSL "${URI}/users/${GITHUB_USERNAME}/repos?per_page=${DEFAULT_PER_PAGE}&type=public")
	local repos=$(echo $response | jq --raw-output '.[] | {fullname:.full_name,repo:.name,fork:.fork,id:.id} | @base64')

	for r in $repos; do
		raw="$(echo $r | base64 -d)"
		local id=$(echo $raw | jq --raw-output '.id')
		local fullname=$(echo $raw | jq --raw-output '.fullname')
		local repo=$(echo $raw | jq --raw-output '.repo')
		local fork=$(echo $raw | jq --raw-output '.fork')

		if [[ "$fork" == "true" ]]; then
			local response=$(curl -sSL "${URI}/repos/${fullname}")
			local user=$(echo $response | jq --raw-output '.parent.owner.login')
			mirror_repo "${user}/${repo}"
		else
			mirror_repo "${fullname}"
		fi
	done
}

main
